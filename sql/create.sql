-- noinspection SqlNoDataSourceInspectionForFile

DROP SCHEMA IF EXISTS RECIPEDB;
CREATE SCHEMA IF not EXISTS RECIPEDB;
use RECIPEDB;
CREATE TABLE USER (
	userID VARCHAR(8) NOT NULL,
	email VARCHAR(50) NOT NULL,
	password VARCHAR(50) NOT NULL,
	cupboardID VARCHAR(8) NOT NULL,
	cartID VARCHAR(8) NOT NULL,
	PRIMARY KEY(userID),
	UNIQUE(cupboardID),
	UNIQUE(cartID)
);
CREATE TABLE INGREDIENT (
	ingredientID VARCHAR(8) NOT NULL,
	name VARCHAR(100),
	PRIMARY KEY(ingredientID)
);
CREATE TABLE ING_SUBSTITUTION (
	ingredientID VARCHAR(8) NOT NULL,
	substitution VARCHAR(100) NOT NULL,
	PRIMARY KEY(ingredientID, substitution),
	FOREIGN KEY(ingredientID) REFERENCES INGREDIENT(ingredientID)
);
CREATE TABLE RECIPE (
	recipeID VARCHAR(8) NOT NULL,
	name VARCHAR(50) NOT NULL, -- not in ER diagram
	URL VARCHAR(255),
	PRIMARY KEY(recipeID)
);
CREATE TABLE STORES (
	cupboardID VARCHAR(8) NOT NULL,
	ingredientID VARCHAR(8) NOT NULL,
	PRIMARY KEY(cupboardID, ingredientID),
	FOREIGN KEY(cupboardID) REFERENCES USER(cupboardID),
	FOREIGN KEY(ingredientID) REFERENCES INGREDIENT(ingredientID)
);
CREATE TABLE CONTAINS (
	cartID VARCHAR(8) NOT NULL,
	ingredientID VARCHAR(8) NOT NULL,
	PRIMARY KEY(cartID, ingredientID),
	FOREIGN KEY(cartID) REFERENCES USER(cartID),
	FOREIGN KEY(ingredientID) REFERENCES INGREDIENT(ingredientID)
);
CREATE TABLE LISTS (
	recipeID VARCHAR(8) NOT NULL,
	ingredientID VARCHAR(8) NOT NULL,
	isRequired BOOLEAN NOT NULL,
	PRIMARY KEY(recipeID, ingredientID),
	FOREIGN KEY(recipeID) REFERENCES RECIPE(recipeID),
	FOREIGN KEY(ingredientID) REFERENCES INGREDIENT(ingredientID)
);
CREATE TABLE ADDS (
	userID VARCHAR(8) NOT NULL,
	recipeID VARCHAR(8) NOT NULL,
	lastCooked DATE,
	timesCooked INTEGER,
	rating FLOAT,
	PRIMARY KEY(userID, recipeID),
	FOREIGN KEY(userID) REFERENCES USER(userID),
	FOREIGN KEY(recipeID) REFERENCES RECIPE(recipeID)
);
